
             Plethora, a massively-scalable HTTP client testing tool.
                 (c) 2006 Codemass, Inc.
                 http://www.codemass.com/plethora/

Releases
--------

  0.0.1      - In Development

Release Showstoppers
--------------------

* When headers are added (or added with a blank value) they should over-
  ride (or disable) a pre-existing header value for the same header.
  - Perhaps allow multiple Cookie headers, to support this spec violation?

* Docuemnt typically usage, including how to deal with file-descriptor
  limits and other OS-limitations (eg. Mac OS X).

* Optionally allow the client to continue trying to connect even upon
  connect failure, if there have been successful connects already. This
  will let us maintain load on a server instead of suddenly stopping the
  test.

Known Bugs
----------

* When the client runs out of sockets, we get an EADDRNOTAVAIL (on Solaris 10)
  which looks like "Can't assign requested address". We should either
  provide instructions for increasing system limits or we should retry
  for a short period of time until the problem resolves itself.

* Doesn't work on Mac OS X/Darwin due to bug in kqueue that doesn't handle
  non-blocking connect() calls.

* Libevent has a devpoll error, here's the patch to fix it (apply to
  libevent-1.1a):

--- devpoll.c.orig    Sat May 27 15:33:51 2006
+++ devpoll.c   Sat May 27 14:50:08 2006
@@ -140,7 +140,7 @@
 
        if (getrlimit(RLIMIT_NOFILE, &rl) == 0 &&
            rl.rlim_cur != RLIM_INFINITY)
-               nfiles = rl.rlim_cur;
+               nfiles = rl.rlim_cur - 1;
 
        /* Initialize the kernel queue */
        if ((dpfd = open("/dev/poll", O_RDWR)) == -1) {


Wishlist
--------

* Allow setting of buffer sizes at runtime.

* Add support for delays at various points in the request/response
  state to allow for higher concurrency testing without overloading
  the client or server CPUs or network unnecessarily.

Done
----

Release 0.0.1:

* Basic functionality, multiple URLs, global timing metrics.

* Added support for various debugging output levels through the -v option.

* Added support for Solaris, tested on Solaris 10. Doesn't currently work
  on Mac OS X due to lame non-blocking connect + kqueue bug in darwin.

* Fixed a parsing bug that caused URI string corruption due to missing
  space for null characters at the end of strings.

* Improve body read draining by allowing up to 128k sized reads. With
  new TCP/IP stacks that dynamically size the socket buffers, it's
  very likely that this will be used often.

* Allow up to 8k in the receive header line, fail if larger.

* Only use one static buffer for draining the response body, instead
  of allocating for every call to process_reading_body(). This isn't
  really that much more efficient, except for maybe some cache hits
  in the kernel's read() implementation, and may be changed back
  if I start doing body-based validation later.

* Per-URL average (mean) timing metrics and printed output after running
  the test.

* Keep track of max simultaneously connected sockets.

* Per-URL min/max timing metrics and printed output.

* Global min/max timing metrics.

